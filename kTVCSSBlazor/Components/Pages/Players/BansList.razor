@page "/banslist"
@using CurrieTechnologies.Razor.SweetAlert2
@using kTVCSSBlazor.Db.Models.Players
@inject Db.Interfaces.IPlayers repo
@inject Db.Interfaces.IAdmins admin
@inject IJSRuntime JS
@inject IHttpContextAccessor httpContextAccessor
@inject kTVCSSAuthenticationStateProvider AuthProvider
@inject SweetAlertService Swal
@inject NavigationManager NavigationManager

<PageTitle>kTVCSS @@ Банлист</PageTitle>

<kTVCSSBlazor.Components.Layout.Bar />

<MudDataGrid @bind-SelectedItems=selected MultiSelection="@isAdmin" Items="@dataSource" FilterCaseSensitivity=DataGridFilterCaseSensitivity.Ignore Virtualize="true" Hover="true" FilterMode=DataGridFilterMode.ColumnFilterMenu Height="81svh" Filterable="false" SortMode="@SortMode.None" Groupable="false">
    <ToolBarContent>
        <MudText>Список заблокированных игроков</MudText>
        @if (isAdmin)
        {
            <MudSpacer />

            <MudButton OnClick="UnbanSelected" Color="Color.Error">Разбанить выбранных</MudButton>
        }
    </ToolBarContent>
    <Columns>
        @if (isAdmin)
        {
            <SelectColumn T="BannedUser" />
        }
        @if (!isMobile)
        {
            <TemplateColumn Title="" HeaderStyle="margin-left: 0;width: 15px" Filterable="false">
                <CellTemplate>
                    <img style="display: flex;justify-content: center;width: 28px;" src="@context.Item.RankName" />
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="" HeaderStyle="margin-left: 0;width: 25px" Filterable="false">
                <CellTemplate>
                    <img style='display: flex;justify-content: center;cursor: pointer; background-repeat: no-repeat; background-position: 50%; border-radius: 50%; width: 25px; height: 25px;' src='@context.Item.PhotoUrl' />
                </CellTemplate>
            </TemplateColumn>
        }
        <TemplateColumn Title="Ник">
            <CellTemplate>
                <MudLink Color="Color.Inherit" Href="@GetUserLink(context.Item.Id)">@context.Item.Name</MudLink>
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.SteamID" />
        <PropertyColumn Property="x => x.BanExpires" Title="Истекает" />
        <PropertyColumn Property="x => x.Reason" Title="Причина" />
        <PropertyColumn Property="x => x.BannedBy" Title="Выдан" />
    </Columns>
</MudDataGrid>

@code {
    private List<BannedUser> dataSource = new List<BannedUser>();
    private HashSet<BannedUser> selected = new();
    private bool isMobile = false;
    private bool isAdmin = false;

    private string GetUserLink(int id)
    {
        return $"/player/{id}";
    }

    private async Task UnbanSelected()
    {
        var options = new SweetAlertOptions
            {
                Title = "Введите причину разбана",
                Input = SweetAlertInputType.Text,
                InputValue = $""
            };

        var result = await Swal.FireAsync(options);

        if (result.Value is not null)
        {
            if (result.Value == "")
            {
                return;
            }
            else
            {
                foreach (var player in selected)
                {
                    admin.UnbanPlayer(player.Id, AuthProvider.CurrentUser.Username, result.Value);
                }

                NavigationManager.Refresh(true);
            }
        }
    }

    protected override void OnInitialized()
    {
        var userAgent = httpContextAccessor?.HttpContext?.Request.Headers["User-Agent"].ToString();
        if (userAgent != null && (userAgent.Contains("Android") || userAgent.Contains("iPhone")))
        {
            isMobile = true;
        }

        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            JS.InvokeVoidAsync("showLoadBar");
            dataSource.AddRange(repo.GetBannedList());
            JS.InvokeVoidAsync("hideLoadBar");
            isAdmin = await admin.IsAdmin(AuthProvider.CurrentUser.SteamId);
            if (isAdmin)
            {
                StateHasChanged();
            }
        }
    }
}
