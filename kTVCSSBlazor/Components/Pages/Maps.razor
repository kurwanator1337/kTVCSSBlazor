@page "/maps"
@using CurrieTechnologies.Razor.SweetAlert2
@using Dapper
@using kTVCSSBlazor.Db
@using Microsoft.AspNetCore.SignalR.Client
@using kTVCSSBlazor.Db.Models.Highlights
@using kTVCSSBlazor.Db.Models.Players
@inject kTVCSSAuthenticationStateProvider AuthProvider
@inject IJSRuntime JS
@inject SweetAlertService Swal
@inject Context db
@inject NavigationManager nav

<PageTitle>kTVCSS @@ Карты</PageTitle>


<MudGrid Justify="Justify.Center">
    <MudItem xs="12" md="8">
        <MudAlert Style="margin-bottom: 1%" Severity="Severity.Info">Здесь представлены все основные карты, использующиеся на миксах и турнирах</MudAlert>
        <MudAlert Style="margin-bottom: 1%" Severity="Severity.Warning">Поместите скачанную карту по пути, например, C:\CSSv34_ClientMod\cstrike\maps</MudAlert>
        <MudAlert Style="margin-bottom: 1%" Severity="Severity.Error">Если все равно не пускает на сервер, то скопируйте в, например, C:\CSSv34_ClientMod\cstrike_downloads\maps</MudAlert>

        <MudSimpleTable Dense Style="overflow-x: auto;">
            <thead>
                <tr style="text-align: center;">

                </tr>
            </thead>
            <tbody>
                @foreach (var row in maps)
                {
                    <tr style="width: 50%;margin:auto">
                        <td style="text-align: center;">@row.Map</td>
                        <td><MudFab Style="" Disabled="@disabled" Size="Size.Small" OnClick="@(() => { DownloadMap(row.Map); })" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Download" /></td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </MudItem>
</MudGrid>

<script>
    function openUrl(url) {
        window.open(url, "_blank");
    }
</script>

@code {
    List<dynamic> maps = new List<dynamic>();
    private bool disabled = false;

    private async Task DownloadMap(string mapName)
    {
        disabled = true;
        
        //nav.NavigateTo($"/maps/{mapName}.bsp", true, true);
        
        JS.InvokeVoidAsync("openUrl", $"/maps/{mapName}.bsp");
        
        disabled = false;
        
        InvokeAsync(StateHasChanged);
    }

    protected override Task OnInitializedAsync()
    {
        maps = db.Db.Query("SELECT MAP as Map FROM MixesMaps").ToList();

        return base.OnInitializedAsync();
    }
}
